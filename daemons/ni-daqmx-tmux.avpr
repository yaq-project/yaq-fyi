{
    "config": {
        "channels": {
            "default": {},
            "type": "map",
            "values": "channel"
        },
        "choppers": {
            "default": {},
            "type": "map",
            "values": "chopper"
        },
        "device_name": {
            "doc": "DAQmx name of device to address.",
            "type": "string"
        },
        "enable": {
            "default": true,
            "doc": "Disable this daemon. The kind entry-point will not attempt to start this daemon.",
            "origin": "is-daemon",
            "type": "boolean"
        },
        "log_level": {
            "default": "info",
            "doc": "Set daemon log-level.",
            "origin": "is-daemon",
            "type": {
                "name": "level",
                "symbols": [
                    "debug",
                    "info",
                    "notice",
                    "warning",
                    "error",
                    "critical",
                    "alert",
                    "emergency"
                ],
                "type": "enum"
            }
        },
        "log_to_file": {
            "default": false,
            "doc": "Optionally force logging to a file.",
            "origin": "is-daemon",
            "type": "boolean"
        },
        "loop_at_startup": {
            "default": false,
            "doc": "If set to true, the daemon will begin to loop measure as soon as it starts.",
            "origin": "has-measure-trigger",
            "type": "boolean"
        },
        "make": {
            "default": null,
            "origin": "is-daemon",
            "type": [
                "null",
                "string"
            ]
        },
        "model": {
            "default": null,
            "origin": "is-daemon",
            "type": [
                "null",
                "string"
            ]
        },
        "nsamples": {
            "default": 900,
            "type": "int"
        },
        "port": {
            "doc": "TCP port for daemon to occupy.",
            "origin": "is-daemon",
            "type": "int"
        },
        "rest_channel": {
            "default": "ai0",
            "doc": "Channel to occupy when not making an explicitly specified measurement.",
            "type": "string"
        },
        "serial": {
            "default": null,
            "doc": "Serial number for the particular device represented by the daemon",
            "origin": "is-daemon",
            "type": [
                "null",
                "string"
            ]
        },
        "shots_processing_path": {
            "default": null,
            "doc": "Path to script for shots processing.",
            "type": [
                "null",
                "string"
            ]
        },
        "timeout": {
            "default": 10.0,
            "doc": "Timeout in seconds between each trigger edge.",
            "type": "float"
        },
        "trigger_source": {
            "default": "ai0",
            "type": "string"
        }
    },
    "doc": "Triggered NI-daqmx with multiplex.",
    "hardware": [
        "ni:pci-6251",
        "ni:pci-6361"
    ],
    "installation": {
        "PyPI": "https://pypi.org/project/yaqd-ni"
    },
    "links": {
        "bugtracker": "https://github.com/yaq-project/yaqd-ni/issues",
        "example-configs": "https://github.com/yaq-project/yaqd-ni/tree/main/example-yaq-configs/ni-daqmx-tmux",
        "manufacturer": "",
        "source": "https://github.com/yaq-project/yaqd-ni"
    },
    "messages": {
        "busy": {
            "doc": "Returns true if daemon is currently busy.",
            "origin": "is-daemon",
            "request": [],
            "response": "boolean"
        },
        "get_allowed_voltage_ranges": {
            "request": [],
            "response": {
                "items": "string",
                "type": "array"
            }
        },
        "get_channel_names": {
            "doc": "Get current channel names.",
            "origin": "is-sensor",
            "request": [],
            "response": {
                "items": "string",
                "type": "array"
            }
        },
        "get_channel_shapes": {
            "doc": "Get current channel shapes. If list is empty, channel is scalar.",
            "origin": "is-sensor",
            "request": [],
            "response": {
                "type": "map",
                "values": {
                    "items": "int",
                    "type": "array"
                }
            }
        },
        "get_channel_units": {
            "doc": "Get current channel units.",
            "origin": "is-sensor",
            "request": [],
            "response": {
                "type": "map",
                "values": [
                    "null",
                    "string"
                ]
            }
        },
        "get_config": {
            "doc": "Full configuration for the individual daemon as defined in the TOML file.\nThis includes defaults and shared settings not directly specified in the daemon-specific TOML table.\n",
            "origin": "is-daemon",
            "request": [],
            "response": "string"
        },
        "get_config_filepath": {
            "doc": "String representing the absolute filepath of the configuration file on the host machine.\n",
            "origin": "is-daemon",
            "request": [],
            "response": "string"
        },
        "get_measured": {
            "doc": "Returns map of channel_name to measured_value. Always returns additional key measurement_id.",
            "origin": "is-sensor",
            "request": [],
            "response": {
                "type": "map",
                "values": [
                    "int",
                    "double",
                    "ndarray"
                ]
            }
        },
        "get_measured_samples": {
            "doc": "Get an array of shape (sample, shot).",
            "request": [],
            "response": "ndarray"
        },
        "get_measured_shots": {
            "request": [],
            "response": "ndarray"
        },
        "get_measurement_id": {
            "doc": "Get current measurement_id. Clients are encouraged to watch for this to be updated before calling get_measured to get entire measurement.",
            "origin": "is-sensor",
            "request": [],
            "response": {
                "type": "int"
            }
        },
        "get_ms_wait": {
            "doc": "Get the number of milliseconds to wait before acquiring.",
            "request": [],
            "response": "int"
        },
        "get_nshots": {
            "doc": "Get the currently planned number of shots.",
            "request": [],
            "response": "int"
        },
        "get_sample_correspondances": {
            "doc": "Returns an array of integers of length nsamples. Zero indicates rest sample. Postive indicates channel. Negative indicates chopper.",
            "request": [],
            "response": "ndarray"
        },
        "get_state": {
            "doc": "Get version of the running daemon",
            "origin": "is-daemon",
            "request": [],
            "response": "string"
        },
        "id": {
            "doc": "JSON object with information to identify the daemon, including name, kind, make, model, serial.\n",
            "origin": "is-daemon",
            "request": [],
            "response": {
                "type": "map",
                "values": [
                    "null",
                    "string"
                ]
            }
        },
        "measure": {
            "doc": "Initiate a measurement. Returns integer, measurement ID.",
            "origin": "has-measure-trigger",
            "request": [
                {
                    "default": false,
                    "name": "loop",
                    "type": "boolean"
                }
            ],
            "response": "int"
        },
        "set_ms_wait": {
            "doc": "Set the number of milliseconds to wait before acquiring.",
            "request": [
                {
                    "name": "ms_wait",
                    "type": "int"
                }
            ],
            "response": "null"
        },
        "set_nshots": {
            "doc": "Set the number of shots to acquire.",
            "request": [
                {
                    "name": "nshots",
                    "type": "int"
                }
            ],
            "response": "null"
        },
        "shutdown": {
            "doc": "Cleanly shutdown (or restart) daemon.",
            "origin": "is-daemon",
            "request": [
                {
                    "default": false,
                    "name": "restart",
                    "type": "boolean"
                }
            ],
            "response": "null"
        },
        "stop_looping": {
            "doc": "Stop looping measurement.",
            "origin": "has-measure-trigger",
            "request": [],
            "response": "null"
        }
    },
    "properties": {
        "ms_wait": {
            "control_kind": "normal",
            "dynamic": true,
            "getter": "get_ms_wait",
            "limits_getter": null,
            "options_getter": null,
            "record_kind": "metadata",
            "setter": "set_ms_wait",
            "type": "int",
            "units_getter": null
        },
        "nshots": {
            "control_kind": "hinted",
            "dynamic": true,
            "getter": "get_nshots",
            "limits_getter": null,
            "options_getter": null,
            "record_kind": "metadata",
            "setter": "set_nshots",
            "type": "int",
            "units_getter": null
        }
    },
    "protocol": "ni-daqmx-tmux",
    "requires": [],
    "state": {
        "ms_wait": {
            "default": 0,
            "type": "int"
        },
        "nshots": {
            "default": 100,
            "type": "int"
        }
    },
    "traits": [
        "has-measure-trigger",
        "is-daemon",
        "is-sensor"
    ],
    "types": [
        {
            "default": "average",
            "name": "processing_method",
            "symbols": [
                "average",
                "sum",
                "min",
                "max"
            ],
            "type": "enum"
        },
        {
            "items": "float",
            "name": "voltage_range",
            "type": "array"
        },
        {
            "fields": [
                {
                    "name": "name",
                    "type": "string"
                },
                {
                    "default": [
                        -10.0,
                        10.0
                    ],
                    "doc": "[min_value, max_value], in volts. Range values are restricted to those the available to the device.",
                    "name": "range",
                    "type": "voltage_range"
                },
                {
                    "default": true,
                    "name": "enabled",
                    "type": "boolean"
                },
                {
                    "default": false,
                    "name": "invert",
                    "type": "boolean"
                },
                {
                    "name": "signal_start",
                    "type": "int"
                },
                {
                    "name": "signal_stop",
                    "type": "int"
                },
                {
                    "default": 0,
                    "name": "signal_presample",
                    "type": "int"
                },
                {
                    "name": "signal_method",
                    "type": "processing_method"
                },
                {
                    "default": false,
                    "name": "use_baseline",
                    "type": "boolean"
                },
                {
                    "default": null,
                    "name": "baseline_start",
                    "type": [
                        "null",
                        "int"
                    ]
                },
                {
                    "default": null,
                    "name": "baseline_stop",
                    "type": [
                        "null",
                        "int"
                    ]
                },
                {
                    "default": 0,
                    "name": "baseline_presample",
                    "type": "int"
                },
                {
                    "name": "baseline_method",
                    "type": "processing_method"
                }
            ],
            "name": "channel",
            "type": "record"
        },
        {
            "fields": [
                {
                    "name": "name",
                    "type": "string"
                },
                {
                    "default": true,
                    "name": "enabled",
                    "type": "boolean"
                },
                {
                    "default": false,
                    "name": "invert",
                    "type": "boolean"
                },
                {
                    "name": "index",
                    "type": "int"
                }
            ],
            "name": "chopper",
            "type": "record"
        },
        {
            "fields": [
                {
                    "name": "shape",
                    "type": {
                        "items": "int",
                        "type": "array"
                    }
                },
                {
                    "name": "typestr",
                    "type": "string"
                },
                {
                    "name": "data",
                    "type": "bytes"
                },
                {
                    "name": "version",
                    "type": "int"
                }
            ],
            "logicalType": "ndarray",
            "name": "ndarray",
            "type": "record"
        }
    ]
}